---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: nginx-external
  namespace: network-system
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://kubernetes.github.io/ingress-nginx
      chart: ingress-nginx
      version: 3.39.0
      sourceRef:
        kind: HelmRepository
        name: kubernetes-ingress-charts
        namespace: flux-system
  values:
    controller:
      name: controller-external
      image:
        pullPolicy: IfNotPresent
      containerPort:
        http: 80
        https: 443
      dnsPolicy: ClusterFirst
      electionID: ingress-controller-leader
      ingressClass: external
      extraArgs:
        default-ssl-certificate: "network-system/crj-wildcard-certificate"
      kind: Deployment
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - nginx-ingress-external
              topologyKey: kubernetes.io/hostname
      replicaCount: 3
      resources:
        limits:
          cpu: 100m
          memory: 90Mi
        requests:
          cpu: 100m
          memory: 90Mi
      service:
        enabled: true
        loadBalancerIP: 192.168.130.100
        externalTrafficPolicy: Local
        ports:
          http: 80
          https: 443
        targetPorts:
          http: http
          https: https
        type: LoadBalancer
      metrics:
        port: 10254
        # if this port is changed, change healthz-port: in extraArgs: accordingly
        enabled: true
        service:
          annotations: {}
          # prometheus.io/scrape: "true"
          # prometheus.io/port: "10254"
          # clusterIP: ""
          ## List of IP addresses at which the stats-exporter service is available
          ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
          ##
          externalIPs: []
          # loadBalancerIP: ""
          loadBalancerSourceRanges: []
          servicePort: 9913
          type: ClusterIP
          # externalTrafficPolicy: ""
          # nodePort: ""
        serviceMonitor:
          enabled: true
          additionalLabels: {}
          namespace: ""
          namespaceSelector: {}
          # Default: scrape .Release.Namespace only
          # To scrape all, use the following:
          # namespaceSelector:
          #   any: true
          scrapeInterval: 30s
          # honorLabels: true
          targetLabels: []
          metricRelabelings: []
        prometheusRule:
          enabled: true
          additionalLabels: {}
          # namespace: ""
          rules:
            # These are just examples rules, please adapt them to your needs
            - alert: NGINXConfigFailed
              expr: count(nginx_ingress_controller_config_last_reload_successful == 0) > 0
              for: 1s
              labels:
                severity: critical
              annotations:
                description: bad ingress config - nginx config test failed
                summary: uninstall the latest ingress changes to allow config reloads to resume
            - alert: NGINXCertificateExpiry
              expr: (avg(nginx_ingress_controller_ssl_expire_time_seconds) by (host) - time()) < 604800
              for: 1s
              labels:
                severity: critical
              annotations:
                description: ssl certificate(s) will expire in less then a week
                summary: renew expiring certificates to avoid downtime
            - alert: NGINXTooMany500s
              expr: 100 * ( sum( nginx_ingress_controller_requests{status=~"5.+"} ) / sum(nginx_ingress_controller_requests) ) > 5
              for: 1m
              labels:
                severity: warning
              annotations:
                description: Too many 5XXs
                summary: More than 5% of all requests returned 5XX, this requires your attention
            - alert: NGINXTooMany400s
              expr: 100 * ( sum( nginx_ingress_controller_requests{status=~"4.+"} ) / sum(nginx_ingress_controller_requests) ) > 5
              for: 1m
              labels:
                severity: warning
              annotations:
                description: Too many 4XXs
                summary: More than 5% of all requests returned 4XX, this requires your attention
      admissionWebhooks:
        enabled: false
      ## Improve connection draining when ingress controller pod is deleted using a lifecycle hook:
      ## With this new hook, we increased the default terminationGracePeriodSeconds from 30 seconds
      ## to 300, allowing the draining of connections up to five minutes.
      ## If the active connections end before that, the pod will terminate gracefully at that time.
      ## To effectively take advantage of this feature, the Configmap feature
      ## worker-shutdown-timeout new value is 240s instead of 10s.
      ##
      lifecycle:
        preStop:
          exec:
            command:
              - /wait-shutdown

      priorityClassName: ""

    ## Rollback limit
    ##
    revisionHistoryLimit: 10

    # Maxmind license key to download GeoLite2 Databases
    # https://blog.maxmind.com/2019/12/18/significant-changes-to-accessing-and-using-geolite2-databases
    maxmindLicenseKey: ""

    ## Default 404 backend
    ##
    defaultBackend:
      ##
      enabled: false

      name: defaultbackend
      image:
        repository: k8s.gcr.io/defaultbackend-amd64
        tag: "1.5"
        pullPolicy: IfNotPresent
        # nobody user -> uid 65534
        runAsUser: 65534
        runAsNonRoot: true
        readOnlyRootFilesystem: true
        allowPrivilegeEscalation: false

      extraArgs: {}

      serviceAccount:
        create: true
        name:
      ## Additional environment variables to set for defaultBackend pods
      extraEnvs: []

      port: 8080

      ## Readiness and liveness probes for default backend
      ## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/
      ##
      livenessProbe:
        failureThreshold: 3
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      readinessProbe:
        failureThreshold: 6
        initialDelaySeconds: 0
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 5

      ## Node tolerations for server scheduling to nodes with taints
      ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
      ##
      tolerations: []
      #  - key: "key"
      #    operator: "Equal|Exists"
      #    value: "value"
      #    effect: "NoSchedule|PreferNoSchedule|NoExecute(1.6 only)"

      affinity: {}

      ## Security Context policies for controller pods
      ## See https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/ for
      ## notes on enabling and using sysctls
      ##
      podSecurityContext: {}

      # labels to add to the pod container metadata
      podLabels: {}
      #  key: value

      ## Node labels for default backend pod assignment
      ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
      ##
      nodeSelector: {}

      ## Annotations to be added to default backend pods
      ##
      podAnnotations: {}

      replicaCount: 1

      minAvailable: 1

      resources: {}
      # limits:
      #   cpu: 10m
      #   memory: 20Mi
      # requests:
      #   cpu: 10m
      #   memory: 20Mi

      autoscaling:
        enabled: false
        minReplicas: 1
        maxReplicas: 2
        targetCPUUtilizationPercentage: 50
        targetMemoryUtilizationPercentage: 50

      service:
        annotations: {}

        # clusterIP: ""

        ## List of IP addresses at which the default backend service is available
        ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
        ##
        externalIPs: []

        # loadBalancerIP: ""
        loadBalancerSourceRanges: []
        servicePort: 80
        type: ClusterIP

      priorityClassName: ""

    ## Enable RBAC as per https://github.com/kubernetes/ingress/tree/master/examples/rbac/nginx and https://github.com/kubernetes/ingress/issues/266
    rbac:
      create: true
      scope: false

    # If true, create & use Pod Security Policy resources
    # https://kubernetes.io/docs/concepts/policy/pod-security-policy/
    podSecurityPolicy:
      enabled: false

    serviceAccount:
      create: true
      name:

    ## Optional array of imagePullSecrets containing private registry credentials
    ## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    imagePullSecrets: []
    # - name: secretName

    # TCP service key:value pairs
    # Ref: https://github.com/kubernetes/contrib/tree/master/ingress/controllers/nginx/examples/tcp
    ##
    tcp: {}
    #  8080: "default/example-tcp-svc:9000"

    # UDP service key:value pairs
    # Ref: https://github.com/kubernetes/contrib/tree/master/ingress/controllers/nginx/examples/udp
    ##
    udp: {}
    #  53: "kube-system/kube-dns:53"

