---
global:
  scrape_interval: 60s
  evaluation_interval: 60s
  external_labels:
    environment: prom-lyh
remote_write:
  - url: http://100.64.0.4:9090/api/v1/write
rule_files:
  - /etc/prometheus/alerts/*.yaml
alerting:
  alertmanagers:
    - static_configs:
        - targets:
            - 100.64.0.4.9093
scrape_configs:
  - job_name: 'prometheus'
    static_configs:
      - targets:
          - 'localhost:9090'
  - job_name: 'hass'
    scrape_interval: 60s
    metrics_path: /api/prometheus
    authorization:
      credentials: "${PROMETHEUS_HOME_ASSISTANT_TOKEN}"
    scheme: http
    static_configs:
      - targets: ['home-assistant.home.svc.cluster.local:8123']
    relabel_configs:
      - target_label: instance
        replacement: home-assistant
  - job_name: "k8s_apiservers"
    kubernetes_sd_configs:
      - role: endpoints
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      insecure_skip_verify: true
    authorization:
      credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - source_labels:
          [
            __meta_kubernetes_namespace,
            __meta_kubernetes_service_name,
            __meta_kubernetes_endpoint_port_name,
          ]
        action: keep
        regex: "default;kubernetes;https"
    metric_relabel_configs:
      - source_labels: ["__name__"]
        regex: "(aggregator_openapi|aggregator_unavailable|apiextensions_openapi|apiserver_admission|apiserver_audit|apiserver_cache|apiserver_cel|apiserver_client|apiserver_crd|apiserver_current|apiserver_envelope|apiserver_flowcontrol|apiserver_init|apiserver_kube|apiserver_longrunning|apiserver_request|apiserver_requested|apiserver_response|apiserver_selfrequest|apiserver_storage|apiserver_terminated|apiserver_tls|apiserver_watch|apiserver_webhooks|authenticated_user|authentication|disabled_metric|etcd_bookmark|etcd_lease|etcd_request|field_validation|get_token|go|grpc_client|hidden_metric|kube_apiserver|kubernetes_build|kubernetes_feature|node_authorizer|pod_security|process_cpu|process_max|process_open|process_resident|process_start|process_virtual|registered_metric|rest_client|scrape_duration|scrape_samples|scrape_series|serviceaccount_legacy|serviceaccount_stale|serviceaccount_valid|watch_cache|workqueue)_(.+)"
        action: keep
      # Remove high cardinality metrics
      - source_labels: ["__name__"]
        regex: "(apiserver|etcd|rest_client)_request(|_sli|_slo)_duration_seconds_bucket"
        action: drop
      - source_labels: ["__name__"]
        regex: "(apiserver_response_sizes_bucket|apiserver_watch_events_sizes_bucket)"
        action: drop
  - job_name: "kubelet"
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      insecure_skip_verify: true
    authorization:
      credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    kubernetes_sd_configs:
      - role: node
    relabel_configs:
      - action: labelmap
        regex: "__meta_kubernetes_node_label_(.+)"
    metric_relabel_configs:
      # Remove duplicate metrics
      - source_labels: ["__name__"]
        regex: "(apiserver_audit|apiserver_client|apiserver_delegated|apiserver_envelope|apiserver_storage|apiserver_webhooks|authentication_token|cadvisor_version|container_blkio|container_cpu|container_fs|container_last|container_memory|container_network|container_oom|container_processes|container|csi_operations|disabled_metric|get_token|go|hidden_metric|kubelet_certificate|kubelet_cgroup|kubelet_container|kubelet_containers|kubelet_cpu|kubelet_device|kubelet_graceful|kubelet_http|kubelet_lifecycle|kubelet_managed|kubelet_node|kubelet_pleg|kubelet_pod|kubelet_run|kubelet_running|kubelet_runtime|kubelet_server|kubelet_started|kubelet_volume|kubernetes_build|kubernetes_feature|machine_cpu|machine_memory|machine_nvm|machine_scrape|node_namespace|plugin_manager|prober_probe|process_cpu|process_max|process_open|process_resident|process_start|process_virtual|registered_metric|rest_client|scrape_duration|scrape_samples|scrape_series|storage_operation|volume_manager|volume_operation|workqueue)_(.+)"
        action: keep
      - source_labels: ["node"]
        target_label: instance
        action: replace
  - job_name: "cadvisor"
    scheme: https
    metrics_path: /metrics/cadvisor
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      insecure_skip_verify: true
    authorization:
      credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    kubernetes_sd_configs:
      - role: node
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
  - job_name: "k8s_services"
    honor_labels: true
    metrics_path: /metrics
    kubernetes_sd_configs:
      - role: service
    relabel_configs:
      # Example relabel to scrape only endpoints that have
      # "prometheus.io/scrape = true" annotation.
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      # Example relabel to customize metric path based on endpoints
      # "prometheus.io/metric_path = <metric path>" annotation.
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_metric_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      # Example relabel to scrape only single, desired port for the service based
      # on endpoints "prometheus.io/port = <port>" annotation.
      - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      # Example relabel to configure scrape scheme for all service scrape targets
      # based on endpoints "example.io/scrape_scheme = <scheme>" annotation.
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape_scheme]
        action: replace
        target_label: __scheme__
        regex: (https?)
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: namespace
      - source_labels: [__meta_kubernetes_service_name]
        action: replace
        target_label: service
  - job_name: "k8s_pods"
    kubernetes_sd_configs:
      - role: pod
    relabel_configs:
      # Example relabel to scrape only pods that have
      # "prometheus.io/scrape = true" annotation.
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      # Example relabel to customize metric path based on pod
      # "prometheus.io/metric_path = <metric path>" annotation.
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_metric_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      # Example relabel to scrape only single, desired port for the pod based
      # on "prometheus.io/port = <port>" annotation.
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      # Example relabel to configure scrape scheme for all service scrape targets
      # based on endpoints "example.io/scrape_scheme = <scheme>" annotation.
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape_scheme]
        action: replace
        target_label: __scheme__
        regex: (https?)
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: pod
  - job_name: "k8s_services_super_slow"
    scrape_timeout: 60s
    scrape_interval: 1200s
    metrics_path: /metrics
    kubernetes_sd_configs:
      - role: service
    relabel_configs:
      # Example relabel to scrape only endpoints that have
      # "prometheus.io/scrape = true" annotation.
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
        action: keep
        regex: super_slow
      # Example relabel to customize metric path based on endpoints
      # "prometheus.io/metric_path = <metric path>" annotation.
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_metric_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      # Example relabel to scrape only single, desired port for the service based
      # on endpoints "prometheus.io/port = <port>" annotation.
      - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      # Example relabel to configure scrape scheme for all service scrape targets
      # based on endpoints "example.io/scrape_scheme = <scheme>" annotation.
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape_scheme]
        action: replace
        target_label: __scheme__
        regex: (https?)
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: namespace
      - source_labels: [__meta_kubernetes_service_name]
        action: replace
        target_label: service
