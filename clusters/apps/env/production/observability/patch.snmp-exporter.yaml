---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: snmp-exporter
spec:
  values:
    securityContext:
      fsGroup: 1355
      runAsUser: 1355
      runAsNonRoot: true

    ## Security context to be added to snmp-exporter containers
    containerSecurityContext:
      runAsNonRoot: true
      runAsUser: 1355
      readOnlyRootFilesystem: true

    ## Additional labels to add to all resources
    customLabels: {}
      # app: snmp-exporter

    # config:

    extraConfigmapMounts:
      - name: snmp-exporter-configmap
        mountPath: /run/secrets/snmp-exporter
        subPath: snmp.yaml
        configMap: snmp-exporter-configmap-configmap
        readOnly: true
        defaultMode: 420

    ## Additional secret mounts
    # Defines additional mounts with secrets. Secrets must be manually created in the namespace.
    extraSecretMounts: []
      # - name: secret-files
      #   mountPath: /run/secrets/snmp-exporter
      #   secretName: snmp-exporter-secret-files
      #   readOnly: true
      #   defaultMode: 420

    ## For RBAC support:
    rbac:
      # Specifies whether RBAC resources should be created
      create: true

    serviceAccount:
      # Specifies whether a ServiceAccount should be created
      create: true

      # The name of the ServiceAccount to use.
      # If not set and create is true, a name is generated using the fullname template
      name:

    resources:
      limits:
        memory: 300Mi
      requests:
        memory: 50Mi

    livenessProbe:
      httpGet:
        path: /health
        port: http
    readinessProbe:
      httpGet:
        path: /health
        port: http

    service:
      annotations: {}
      type: ClusterIP
      port: 9116

    podAnnotations: {}

    extraArgs: []
    #  --history.limit=1000

    replicas: 1
    ## Monitors ConfigMap changes and POSTs to a URL
    ## Ref: https://github.com/jimmidyson/configmap-reload
    ##
    configmapReload:
      ## configmap-reload container name
      ##
      name: configmap-reload

      ## configmap-reload container image
      ##
      image:
        repository: jimmidyson/configmap-reload
        tag: v0.5.0
        pullPolicy: IfNotPresent

      ## configmap-reload resource requests and limits
      ## Ref: http://kubernetes.io/docs/user-guide/compute-resources/
      ##
      resources: {}

    # Enable this if you're using https://github.com/prometheus-operator/prometheus-operator
    # A service monitor will be created per each item in serviceMonitor.params[]
    serviceMonitor:
      enabled: false
      namespace: monitoring

      path: /snmp

      # Fall back to the prometheus default unless specified
      # interval: 10s
      scrapeTimeout: 10s
      module:
        - if_mib

      # Relabelings dynamically rewrite the label set of a target before it gets scraped.
      # Set if defined unless overriden by params.relabelings.
      # https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api.md#monitoring.coreos.com/v1.RelabelConfig
      relabelings: []
        # - sourceLabels: [__address__]
        #   targetLabel: __param_target
        # - sourceLabels: [__param_target]
        #   targetLabel: instance

      # Metric relabeling is applied to samples as the last step before ingestion.
      # Set if defined unless overriden by params.additionalMetricsRelabels.
      additionalMetricsRelabels: {}

      # Label for selecting service monitors as set in Prometheus CRD.
      # https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api.md#monitoring.coreos.com/v1.PrometheusSpec
      selector:
        prometheus: kube-prometheus

      # Retain the job and instance labels of the metrics retrieved by the snmp-exporter
      # https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api.md#monitoring.coreos.com/v1.Endpoint
      honorLabels: true

      params: []
        # Human readable URL that will appear in Prometheus / AlertManager
        # - name: localhost
        # The target that snmp will scrape
        #   target: 127.0.0.1
        # Module used for scraping. Overrides value set in serviceMonitor.module
        #   module:
        #     - if_mib
        # Map of labels for ServiceMonitor. Overrides value set in serviceMonitor.selector
        #   labels: {}
              # release: kube-prometheus-stack
        # Scraping interval. Overrides value set in serviceMonitor.interval
        #   interval: 30s
        # Scrape timeout. Overrides value set in serviceMonitor.scrapeTimeout
        #   scrapeTimeout: 30s
        # Relabelings. Overrides value set in serviceMonitor.relabelings
        #   relabelings: []
        # Map of metric labels and values to add. Overrides value set in serviceMonitor.additionalMetricsRelabels
        #   additionalMetricsRelabels: {}
