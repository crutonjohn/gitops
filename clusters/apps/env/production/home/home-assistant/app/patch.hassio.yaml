---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: app-template
spec:
  chart:
    spec:
      version: 3.1.0
  values:
    controllers:
      home-assistant:
        type: deployment
        annotations:
          reloader.stakater.com/auto: "true"

        pod:
          annotations:
            k8s.v1.cni.cncf.io/networks: |
              [{
                "name":"iot-garbage-apps",
                "namespace": "network-system",
                "mac": "e8:f3:3c:72:23:f6",
                "ips": ["192.168.134.100/24"]
              }]
        containers:
          home-assistant:
            image:
              repository: ghcr.io/onedr0p/home-assistant
              tag: rolling@sha256:7103698ead18144a39ae5412467fe1885331367aeb22a9c2046640f0c8f84cf7
            env:
              TZ: America/New_York
            envFrom:
              - secretRef:
                  name: home-assistant
            probes:
              liveness:
                enabled: false
              readiness:
                enabled: false
              startup:
                enabled: false
            securityContext:
              fsGroup: ${APP_UID}
              runAsNonRoot: true
              runAsUser: ${APP_UID}
              runAsGroup: ${APP_UID}
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 1Gi
    defaultPodOptions:
      # affinity:
      #   nodeAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       nodeSelectorTerms:
      #         - matchExpressions:
      #             - key: ${FAMILY_DOMAIN}/role
      #               operator: In
      #               values:
      #                 - apps
      securityContext:
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
      #   fsGroup: ${APP_UID}
      #   runAsNonRoot: true
      #   runAsUser: ${APP_UID}
      #   runAsGroup: ${APP_UID}
      dnsConfig:
        options:
          - { name: ndots, value: "1" }
    service:
      home-assistant:
        controller: home-assistant
        ports:
          http:
            port: 8123
      external:
        enabled: true
        type: LoadBalancer
        controller: home-assistant
        labels:
          io.cilium/bgp-announce: worker
        annotations:
          io.cilium/lb-ipam-ips: "${CLUSTER_LB_HOME_ASSISTANT}"
        externalTrafficPolicy: Local
        ports:
          http:
            enabled: true
            port: 8123
            protocol: TCP
            targetPort: 8123

    ingress:
      home-assistant:
        enabled: false
        hosts: []

    persistence:
      config:
        existingClaim: home-assistant-config
        globalMounts:
          - path: /config
            readOnly: false

      logs:
        type: emptyDir
        globalMounts:
          - path: /config/logs
      tts:
        type: emptyDir
        globalMounts:
          - path: /config/tts
      tmp:
        type: emptyDir
