# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/refs/tags/common-3.1.0/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: ${APP}
spec:
  interval: 12h
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    defaultPodOptions:
      securityContext:
        fsGroup: ${APP_UID}
        runAsNonRoot: true
        runAsUser: ${APP_UID}
        runAsGroup: ${APP_UID}

    controllers:
      lidarr:
        type: deployment

        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
            envFrom: &envFrom
              - secretRef:
                  name: lidarr-secret

        containers:
          lidarr:
            nameOverride: lidarr
            image:
              repository: ghcr.io/crutonjohn/lidarr-plugins
              tag: rolling@sha256:4bac3540b98aab19eb2828ea0dc91daee1351068e214e9f378d8fd4e6e5e6eef
              pullPolicy: IfNotPresent
            envFrom: *envFrom
            probes:
              liveness:
                enabled: false
              readiness:
                enabled: false
              startup:
                enabled: false
            resources:
              requests:
                cpu: 20m
                memory: 1000M
              limits:
                memory: 4200M

    ingress:
      lidarr:
        # controller: "lidarr"
        enabled: true
        annotations:
          external-dns.alpha.kubernetes.io/hostname: ${INGRESSROUTE_SUBDOMAIN}.${FAMILY_DOMAIN}
          external-dns.alpha.kubernetes.io/target: ${CLUSTER_LB_INGRESS_INTERNAL}
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: auth-system-oauth-auth@kubernetescrd,auth-system-oauth-errors@kubernetescrd
        labels: {}
        className: traefik-internal
        hosts:
          - host: ${INGRESSROUTE_SUBDOMAIN}.${FAMILY_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: ${APP}
                  port: 8686
        tls:
          - secretName: heyjohn-wildcard-certificate
            hosts:
              - ${INGRESSROUTE_SUBDOMAIN}.${FAMILY_DOMAIN}


    service:
      lidarr:
        enabled: true
        controller: lidarr
        primary: true
        ports:
          http:
            port: 8686

    persistence:
      config:
        enabled: true
        existingClaim: "lidarr-config"
        globalMounts:
          - path: /config
      downloads:
        enabled: true
        existingClaim: "media-downloads"
        advancedMounts:
          lidarr:
            lidarr:
              - path: /downloads/deemix
                readOnly: false
                subPath: deemix
              - path: /downloads/soulseek
                readOnly: false
                subPath: soulseek
              - path: /downloads/bysh
                readOnly: false
                subPath: bysh
              - path: /downloads/youtube
                readOnly: false
                subPath: youtube
      music-library:
        enabled: true
        existingClaim: "music-library"
        advancedMounts:
          lidarr:
            lidarr:
              - path: /music
                readOnly: false
