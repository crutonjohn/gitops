---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: app-template
spec:
  chart:
    spec:
      version: 3.1.0
  values:
    defaultPodOptions:
      securityContext:
        fsGroup: 1177
        runAsNonRoot: true
        runAsUser: 1177
        runAsGroup: 1177

      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: ${FAMILY_DOMAIN}/role
                    operator: In
                    values:
                      - apps

    controllers:
      main:
        type: deployment

        containers:
          main:
            nameOverride: lidarr
            image:
              repository: ghcr.io/crutonjohn/lidarr-plugins
              tag: rolling@sha256:4f793802889abd2faa510805ba8fe53d6a7a287602ef1f291be35b92e031238d
              pullPolicy: Always
            env:
              TZ: America/New_York
              LIDARR__BRANCH: "plugins"
              LIDARR__LOG_LEVEL: "debug"
            probes:
              liveness:
                enabled: false
              readiness:
                enabled: false
              startup:
                enabled: false
            resources:
              requests:
                cpu: 20m
                memory: 1000M
              limits:
                memory: 4200M
          metrics:
            nameOverride: metrics
            dependsOn: [main]
            args: [lidarr]
            image:
              repository: ghcr.io/onedr0p/exportarr
              tag: v2.0.0
              pullPolicy: IfNotPresent
            env:
              URL: "http://localhost"
              CONFIG: /config/config.xml
              PORT: "9792"
              ENABLE_ADDITIONAL_METRICS: "true"
              ENABLE_UNKNOWN_QUEUE_ITEMS: "false"
            probes:
              liveness:
                enabled: false
              readiness:
                enabled: false
              startup:
                enabled: false
            resources:
              requests:
                cpu: 20m
                memory: 40M
              limits:
                memory: 100M

    service:
      main:
        enabled: true
        controller: main
        primary: true
        ports:
          http:
            port: 8686
      metrics:
        enabled: true
        controller: main
        primary: false
        ports:
          metrics:
            enabled: true
            primary: false
            protocol: HTTP
            port: 9792
            targetPort: 9792
        annotations:
          prometheus.io/scrape: 'true'
          prometheus.io/port: '9792'

    persistence:
      config:
        enabled: true
        existingClaim: "lidarr-config"
        globalMounts:
          - path: /config
      deemix-import:
        enabled: true
        existingClaim: "music-sync"
        advancedMounts:
          main:
            main:
              - path: /deemix
                readOnly: false
                subPath: deemix
      lidarr-import:
        enabled: true
        existingClaim: "music-sync"
        advancedMounts:
          main:
            main:
              - path: /import
                readOnly: false
                subPath: music
      music-library:
        enabled: true
        existingClaim: "music-library"
        advancedMounts:
          main:
            main:
              - path: /music
                readOnly: false
                subPath: music

    # probes:
    #   liveness:
    #     enabled: true
    #     custom: true
    #     spec:
    #       exec:
    #         command:
    #           - /usr/bin/env
    #           - bash
    #           - -c
    #           - curl --fail localhost:8686/api/v1/system/status?apiKey=`IFS=\> && while read -d \< E C; do if [[ $E = "ApiKey" ]]; then echo $C; fi; done < /config/config.xml`
    #       initialDelaySeconds: 10
    #       periodSeconds: 60
    #       timeoutSeconds: 20
    #       failureThreshold: 3
