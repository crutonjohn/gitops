---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: lidarr
spec:
  values:
    image:
      repository: ghcr.io/onedr0p/lidarr-plugins
      tag: rolling
      pullPolicy: Always
    env:
      TZ: America/New_York
      LIDARR__BRANCH: "plugins"
      LIDARR__LOG_LEVEL: "debug"
    resources:
      requests:
        cpu: 20m
        memory: 863M
      limits:
        memory: 2538M
    service:
      main:
        ports:
          http:
            port: 8686
          metrics:
            enabled: true
            primary: false
            protocol: HTTP
            port: 9792
        annotations:
          prometheus.io/scrape: 'true'
          prometheus.io/port: '9792'
    podSecurityContext:
      fsGroup: 1177
      runAsNonRoot: true
      runAsUser: 1177
      runAsGroup: 1177
    ingress:
      main:
        enabled: false
    persistence:
      config:
        enabled: true
        mountPath: /config
        existingClaim: "lidarr-config"
      media:
        enabled: true
        mountPath: /music
        existingClaim: "music-library"
      deemix-import:
        enabled: true
        mountPath: /downloads
        existingClaim: "deemix-import"
      lidarr-import:
        enabled: true
        mountPath: /import
        existingClaim: "lidarr-import"
    additionalContainers:
      exporter:
        image: "ghcr.io/onedr0p/exportarr:v2.0.0"
        imagePullPolicy: IfNotPresent
        args: ["lidarr"]
        env:
          - name: URL
            value: "http://localhost"
          - name: CONFIG
            value: "/config/config.xml"
          - name: PORT
            value: "9792"
          - name: ENABLE_ADDITIONAL_METRICS
            value: "false"
          - name: ENABLE_UNKNOWN_QUEUE_ITEMS
            value: "false"
        ports:
          - name: metrics
            containerPort: 9792
        volumeMounts:
          - name: config
            mountPath: /config
            readOnly: true
    probes:
      liveness:
        enabled: true
        custom: true
        spec:
          exec:
            command:
              - /usr/bin/env
              - bash
              - -c
              - curl --fail localhost:8686/api/v1/system/status?apiKey=`IFS=\> && while read -d \< E C; do if [[ $E = "ApiKey" ]]; then echo $C; fi; done < /config/config.xml`
          initialDelaySeconds: 10
          periodSeconds: 60
          timeoutSeconds: 20
          failureThreshold: 3
