# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/refs/tags/common-3.1.0/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: ${APP}
spec:
  interval: 12h
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    defaultPodOptions:
      securityContext:
        fsGroup: ${APP_UID}
        runAsNonRoot: true
        runAsUser: ${APP_UID}
        runAsGroup: ${APP_UID}

    controllers:
      prowlarr:
        type: deployment

        containers:
          prowlarr:
            nameOverride: prowlarr
            image:
              repository: ghcr.io/onedr0p/prowlarr-develop
              tag: rolling@sha256:f3c0edbd19d744c8306ae8f72e75f0fb54ff662e9f7b22a4d9029e5c0b7f075c
              pullPolicy: Always
            env:
              TZ: America/New_York
            probes:
              liveness:
                enabled: false
              readiness:
                enabled: false
              startup:
                enabled: false
            resources:
              requests:
                cpu: 20m
                memory: 863M
              limits:
                memory: 2538M
          metrics:
            nameOverride: metrics
            dependsOn: [prowlarr]
            args: [prowlarr]
            image:
              repository: ghcr.io/onedr0p/exportarr
              tag: v2.3.0
              pullPolicy: IfNotPresent
            env:
              URL: "http://localhost"
              CONFIG: /config/config.xml
              PORT: "9792"
              ENABLE_ADDITIONAL_METRICS: "true"
              ENABLE_UNKNOWN_QUEUE_ITEMS: "false"
            probes:
              liveness:
                enabled: false
              readiness:
                enabled: false
              startup:
                enabled: false
            resources:
              requests:
                cpu: 20m
                memory: 40M
              limits:
                memory: 100M

    ingress:
      prowlarr:
        # controller: "prowlarr"
        enabled: true
        annotations:
          external-dns.alpha.kubernetes.io/hostname: ${INGRESSROUTE_SUBDOMAIN}.${FAMILY_DOMAIN}
          external-dns.alpha.kubernetes.io/target: ${CLUSTER_LB_INGRESS_INTERNAL}
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: auth-system-oauth-auth@kubernetescrd,auth-system-oauth-errors@kubernetescrd
        labels: {}
        className: traefik-internal
        hosts:
          - host: ${INGRESSROUTE_SUBDOMAIN}.${FAMILY_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: ${APP}
                  port: 9696
        tls:
          - secretName: heyjohn-wildcard-certificate
            hosts:
              - ${INGRESSROUTE_SUBDOMAIN}.${FAMILY_DOMAIN}

    service:
      prowlarr:
        enabled: true
        controller: prowlarr
        primary: true
        ports:
          http:
            port: 9696
      metrics:
        enabled: true
        controller: prowlarr
        primary: false
        ports:
          metrics:
            enabled: true
            primary: false
            protocol: HTTP
            port: 9792
            targetPort: 9792
        annotations:
          prometheus.io/scrape: 'true'
          prometheus.io/port: '9792'

    persistence:
      config:
        enabled: true
        existingClaim: "prowlarr-config"
        globalMounts:
          - path: /config
