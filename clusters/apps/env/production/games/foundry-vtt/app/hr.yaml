# yaml-language-server: $schema=https://github.com/hugoprudente/charts/blob/a89df8af14e76a0e2edecc2e2a0ddcdb04fcaee6/incubator/foundry-vtt/values.schema.json
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: foundry-vtt
spec:
  interval: 12h
  chart:
    spec:
      chart: incubator/foundry-vtt
      sourceRef:
        kind: GitRepository
        name: hugoprudente-charts
        namespace: flux-system
  values:
    nameOverride: ""
    fullnameOverride: "foundry-vtt"
    dnsPolicy: "ClusterFirst"
    threadCount: "6"
    serviceAccount:
      create: true
      annotations: {}
    image:
      pullPolicy: IfNotPresent
      repository: felddy/foundryvtt
      tag: "13.346"
    resources:
      requests:
        cpu: 500m
        memory: 512Mi
      limits:
        memory: 6144Mi
    podSecurityContext: &sc
      fsGroup: ${APP_UID}
      runAsNonRoot: true
      runAsUser: ${APP_UID}
      runAsGroup: ${APP_UID}
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      capabilities: { drop: ["ALL"] }
    securityContext: *sc
    container:
      cache: /data/container_cache
      cacheSize: 2
      gid: ${APP_UID}
      uid: ${APP_UID}
      patches: /data/patches
      ## Set to a space-delimited list of URLs to be sourced after Foundry is installed but before it is started. Patch URLs are sourced in the order specified. CONTAINER_PATCH_URLS are processed before CONTAINER_PATCHES. ⚠️ Only use patch URLs from trusted sources!
      patchUrls:
        []
        # - https://www.path.example/z.sh
        # - https://www.path.example/b.sh
      ## Normally new `options.json` and `admin.txt` files are generated by the container at each startup.  Setting this to `true` prevents the container from modifying these files when they exist.  If they do not exist, they will be created as normal. Default is false.
      preserveConfig: false
      ## Normally the ownership of the `/data` directory and its contents are changed to match that of the server at startup.  Setting this to a regular expression will exclude any matching paths and preserve their ownership.   _Note: This is a match on the whole path, not a search._  This is useful if you want mount a volume as read-only inside `/data`
      preserveOwner: ""
      timezone: America/New_York
      verbose: false

    persistence:
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is
      ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
      ##   GKE, AWS & OpenStack)
      ##
      storageClass: ""
      dataDir:
        enabled: true
        claimName: "foundry-vtt-data"
      shared:
        # Enable tha shared mount for a NFS file system or a shared bind point with for
        # sharing assets between multiple game instances when not using s3.
        enabled: false
        mounts: []
        # - containerPath: "/shared"
        #   type: bind
        #   hostPath: /files/assets
        #   readOnly: true
        # - containerPath: "/files/assets"
        #   type: pvc
        #   claimName: "pvc-files"

    service:
      serviceType: ClusterIP
      port: 30000
      protocol: TCP
      externalTrafficPolicy: Local
      labels: {}
      annotations: {}

    foundryvtt:
      ### All configurations details are provided here: https://foundryvtt.com/article/hosting/
      ### All supported environment variables can be found here: https://github.com/felddy/foundryvtt-docker/README.md
      ## This sets the config secret to use for the passwords/license key.  If it is set, do not create a new secret.
      configSecretName: "foundry-vtt-secrets"
      ## Account username or email address for foundryvtt.com. Required for downloading an application distribution.
      #username: ""
      ## Account password for foundryvtt.com. Required for downloading an application distribution.
      #password: ""
      ##  S3 pre-signed URL generate from the user's profile.  Required for downloading an application distribution.
      #releaseUrl: ""
      ## The license key to install. e.g.; AAAA-BBBB-CCCC-DDDD-EEEE-FFFF If left unset, a license key will be fetched when using account authentication. If multiple license keys are associated with an account, one will be chosen at random. Specific licenses can be selected by passing in an integer index. The first license key being 1.
      #licenseKey: ""
      ## Admin password. Default: admin
      #adminPassword: ""
      ## A custom hostname to use in place of the host machine's public IP address when displaying the address of the game session. This allows for reverse proxies or DNS servers to modify the public address.
      hostname: "${INGRESS_SUBDOMAIN}.${FAMILY_DOMAIN}"
      ## The default application language and module which provides the core translation files. Default is "en.core"
      language: en.core
      ## Set to `true` to reduce network traffic by serving minified static JavaScript and CSS files.  Enabling this setting is recommended for most users, but module developers may wish to disable it. Default is `false`.
      minifyStaticFiles: true
      ## Choose the CSS theme for the setup page. Choose from `foundry`, `fantasy`, or `scifi`.
      cssTheme: foundry

      ## Inform the Foundry Server that the software is running behind a reverse proxy on some other port. This allows the invitation links created to the game to include the correct external port.
      proxyPort: "443"

      ## Indicates whether the software is running behind a reverse proxy that uses SSL. This allows invitation links and A/V functionality to work as if the Foundry Server had SSL configured directly.
      proxySSL: true

      ## A string path which is appended to the base hostname to serve Foundry VTT content from a specific namespace. For example setting this to demo will result in data being served from http://x.x.x.x:30000/demo/.
      # routePrefix: "/demo"

      ## Credentials for generate the [enabled.json](https://foundryvtt.com/article/aws-s3/) or `true` for AWS environment variable [credentials evaluation](https://docs.aws.amazon.com/sdk-for-javascript/v2/developer-guide/setting-credentials-node.html) usage.
      s3:
        enabled: "false"
        # To use the inline credentials and generate "enabled.json" use: enabled: file
        accessKeyId: ""
        region: eu-west-1
        secretAccessKey: ""
        endpoint: ""
      ## An absolute or relative path that points towards a SSL key/cert file which is used jointly with the sslCert option to enable SSL and https connections. If both options are provided, the server will start using HTTPS automatically.
      # sslCert: null
      # sslKey: null
      ## An array of TURN configurations in JSON format. See: [Using a Custom Relay Server](https://foundryvtt.com/article/audio-video/custom). To disable the internal relay server comment the paramenter. It will be converted when stored in the secrets
      # turnConfigs:
      #   - url: "turn:example.com:3478"
      #     urls:
      #       - "turn:example.com:3478"
      #       - "turns:example.com:5349"
      #     username: "my username"
      #     credential: "my password"

      ## Sets the maximum UDP port used by the internal [TURN relay server](https://foundryvtt.com/article/audio-video/).  This value must be greater than `49152`.  _Note: To use the internal relay server its ports must be published.
      # turnMaxPort: 52300
      ## Allow Universal Plug and Play to automatically request port forwarding for the Foundry VTT port to your local network address. Default is true.
      upnp: false
      ## Version of Foundry VTT to install.
      version: "13.345"
      ## The world startup at system start.
      world: ""

    ingress:
      # defined elsewhere cuz upstream doesn't support named ingress classes
      enabled: false

    ## @section Certmanager Configuration
    ## @param certmanager.version Certmanager version compatibility
    certmanager:
      version: "v1.17.2"
